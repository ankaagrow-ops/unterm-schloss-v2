---
// Scroll-Reveal Component - Dieter Rams + Steve Jobs Prinzipien
// Elegante Animationen beim Scrollen

export interface Props {
  children: any;
  animation?: 'fade-up' | 'fade-in' | 'slide-left' | 'slide-right' | 'scale-in';
  delay?: number;
  duration?: number;
  trigger?: number; // 0.5 = 50% sichtbar
  once?: boolean;
  stagger?: number; // für Cards/Grids
}

const { 
  children,
  animation = 'fade-up',
  delay = 0,
  duration = 0.6,
  trigger = 0.5,
  once = true,
  stagger = 0
} = Astro.props;

// Unique ID für jedes Element
const id = `scroll-reveal-${Math.random().toString(36).substr(2, 9)}`;
---

<div 
  class={`scroll-reveal scroll-reveal--${animation}`}
  data-scroll-reveal
  data-animation={animation}
  data-delay={delay}
  data-duration={duration}
  data-trigger={trigger}
  data-once={once}
  data-stagger={stagger}
  id={id}
>
  <slot />
</div>

<style>
  /* Base Scroll-Reveal Styles */
  .scroll-reveal {
    opacity: 0;
    transition: all var(--duration, 0.6s) ease-out;
    will-change: transform, opacity;
    backface-visibility: hidden;
  }

  /* Animation States */
  .scroll-reveal--fade-up {
    transform: translateY(30px);
  }

  .scroll-reveal--fade-in {
    transform: none;
  }

  .scroll-reveal--slide-left {
    transform: translateX(-50px);
  }

  .scroll-reveal--slide-right {
    transform: translateX(50px);
  }

  .scroll-reveal--scale-in {
    transform: scale(0.95);
  }

  /* Revealed State */
  .scroll-reveal.revealed {
    opacity: 1;
    transform: translate(0, 0) scale(1);
  }

  /* Stagger Support */
  .scroll-reveal[data-stagger] {
    transition-delay: calc(var(--stagger-delay, 0s) + var(--delay, 0s));
  }

  /* Performance Optimizations */
  .scroll-reveal {
    contain: layout style paint;
  }

  /* Reduced Motion Support */
  @media (prefers-reduced-motion: reduce) {
    .scroll-reveal {
      opacity: 1 !important;
      transform: none !important;
      transition: none !important;
    }
  }
</style>

<script>
  // Intersection Observer für Scroll-Reveal
  document.addEventListener('DOMContentLoaded', () => {
    const elements = document.querySelectorAll('[data-scroll-reveal]');

    if (!elements.length) return;

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const element = entry.target;
          const once = element.getAttribute('data-once') === 'true';

          // Add revealed class
          element.classList.add('revealed');

          // Stop observing if once is true
          if (once) {
            observer.unobserve(element);
          }
        } else {
          const element = entry.target;
          const once = element.getAttribute('data-once') === 'true';

          // Remove revealed class if not once
          if (!once) {
            element.classList.remove('revealed');
          }
        }
      });
    }, {
      threshold: 0.15,
      rootMargin: '50px'
    });

    // Observe all scroll-reveal elements
    elements.forEach(el => observer.observe(el));
  });
</script>
