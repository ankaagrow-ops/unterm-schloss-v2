---
export interface Activity {
  title: string;
  description: string;
  image: string;
  imageAlt: string;
}

export interface Props {
  heading: string;
  activities: Activity[];
}

const { heading, activities } = Astro.props;
---

<section class="activities-section">
  <div class="container">
    <h2 class="heading animate-fadeInUp">{heading}</h2>
    
    <div class="activities-list">
      {activities.map((activity, index) => (
        <div class={`activity-item animate-fadeInUp animate-delay-${(index + 1) * 200} ${index % 2 === 0 ? 'image-left' : 'image-right'}`}>
          <div class="activity-grid">
            <div class="activity-image">
              <img 
                src={activity.image} 
                alt={activity.imageAlt}
                loading="lazy"
              />
            </div>
            <div class="activity-content">
              <h3 class="activity-title">{activity.title}</h3>
              <p class="activity-description">{activity.description}</p>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .activities-section {
    background-color: var(--color-cream);
    padding: var(--space-16) 0;
  }

  .container {
    max-width: var(--container-lg);
    margin: 0 auto;
    padding: 0 var(--space-6);
  }

  .heading {
    font-family: 'Playfair Display', serif;
    color: var(--color-brown-dark);
    font-size: var(--text-2xl);
    font-weight: 400;
    text-align: center;
    margin-bottom: var(--space-12);
    line-height: 1.2;
  }

  .activities-list {
    display: flex;
    flex-direction: column;
    gap: var(--space-12);
  }

  .activity-item {
    width: 100%;
  }

  .activity-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-8);
    align-items: center;
    min-height: 400px;
  }

  .activity-item.image-right .activity-grid {
    grid-template-columns: 1fr 1fr;
  }

  .activity-item.image-right .activity-image {
    order: 2;
  }

  .activity-item.image-right .activity-content {
    order: 1;
  }

  .activity-image {
    position: relative;
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .activity-image:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 48px rgba(0, 0, 0, 0.15);
  }

  .activity-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    aspect-ratio: 3/2;
    display: block;
  }

  .activity-content {
    padding: var(--space-4);
  }

  .activity-title {
    font-family: 'Playfair Display', serif;
    color: var(--color-brown-dark);
    font-size: var(--text-xl);
    font-weight: 400;
    margin-bottom: var(--space-4);
    line-height: 1.3;
  }

  .activity-description {
    font-family: 'DM Sans', sans-serif;
    color: var(--color-brown-medium);
    font-size: var(--text-base);
    line-height: var(--leading-relaxed);
    margin: 0;
  }

  /* Animation Classes */
  .animate-fadeInUp {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.8s ease forwards;
  }

  .animate-delay-200 {
    animation-delay: 0.2s;
  }

  .animate-delay-400 {
    animation-delay: 0.4s;
  }

  .animate-delay-600 {
    animation-delay: 0.6s;
  }

  .animate-delay-800 {
    animation-delay: 0.8s;
  }

  .animate-delay-1000 {
    animation-delay: 1s;
  }

  .animate-delay-1200 {
    animation-delay: 1.2s;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .activities-section {
      padding: var(--space-12) 0;
    }

    .container {
      padding: 0 var(--space-4);
    }

    .heading {
      font-size: var(--text-xl);
      margin-bottom: var(--space-8);
    }

    .activities-list {
      gap: var(--space-8);
    }

    .activity-grid {
      grid-template-columns: 1fr;
      gap: var(--space-4);
      min-height: auto;
    }

    .activity-item.image-right .activity-image,
    .activity-item.image-right .activity-content {
      order: unset;
    }

    .activity-image {
      order: -1;
    }

    .activity-content {
      padding: var(--space-3);
    }

    .activity-title {
      font-size: var(--text-lg);
      margin-bottom: var(--space-3);
    }

    .activity-description {
      font-size: var(--text-sm);
    }
  }

  @media (max-width: 480px) {
    .activities-section {
      padding: var(--space-8) 0;
    }

    .container {
      padding: 0 var(--space-3);
    }

    .activities-list {
      gap: var(--space-6);
    }

    .activity-grid {
      gap: var(--space-3);
    }

    .activity-content {
      padding: var(--space-2);
    }

    .activity-title {
      font-size: var(--text-base);
    }

    .activity-description {
      font-size: var(--text-xs);
    }
  }
</style>