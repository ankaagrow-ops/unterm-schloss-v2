---
export interface Feature {
  title: string;
  image: string;
  imageAlt: string;
}

export interface Props {
  heading: string;
  features: Feature[];
}

const { heading, features } = Astro.props;
---

<section class="features-section">
  <div class="container">
    <h2 class="heading animate-fadeInUp">{heading}</h2>
    
    <div class="features-grid">
      {features.map((feature, index) => (
        <div class={`feature-card animate-fadeInUp animate-delay-${(index + 1) * 100}`}>
          <div class="feature-image">
            <img 
              src={feature.image} 
              alt={feature.imageAlt}
              loading="lazy"
            />
          </div>
          <h3 class="feature-title">â€” {feature.title}</h3>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .features-section {
    background-color: var(--color-cream);
    padding: var(--space-16) 0;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-6);
  }

  .heading {
    font-family: 'Playfair Display', serif;
    color: var(--color-brown-dark);
    font-size: var(--text-2xl);
    font-weight: 400;
    text-align: center;
    margin-bottom: var(--space-12);
    line-height: 1.2;
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-6);
    width: 100%;
  }

  .feature-card {
    background: white;
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .feature-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
  }

  .feature-image {
    position: relative;
    aspect-ratio: 4/3;
    overflow: hidden;
  }

  .feature-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .feature-card:hover .feature-image img {
    transform: scale(1.02);
  }

  .feature-title {
    font-family: 'Playfair Display', serif;
    color: var(--color-brown-dark);
    font-size: var(--text-lg);
    font-weight: 400;
    padding: var(--space-6);
    margin: 0;
    line-height: 1.3;
  }

  /* Animation Classes */
  .animate-fadeInUp {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.8s ease forwards;
  }

  .animate-delay-100 {
    animation-delay: 0.1s;
  }

  .animate-delay-200 {
    animation-delay: 0.2s;
  }

  .animate-delay-300 {
    animation-delay: 0.3s;
  }

  .animate-delay-400 {
    animation-delay: 0.4s;
  }

  .animate-delay-500 {
    animation-delay: 0.5s;
  }

  .animate-delay-600 {
    animation-delay: 0.6s;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .features-section {
      padding: var(--space-12) 0;
    }

    .container {
      padding: 0 var(--space-4);
    }

    .features-grid {
      grid-template-columns: 1fr;
      gap: var(--space-4);
    }

    .heading {
      font-size: var(--text-xl);
      margin-bottom: var(--space-8);
    }

    .feature-title {
      padding: var(--space-4);
      font-size: var(--text-base);
    }
  }

  @media (max-width: 480px) {
    .features-section {
      padding: var(--space-8) 0;
    }

    .container {
      padding: 0 var(--space-3);
    }

    .features-grid {
      gap: var(--space-3);
    }

    .heading {
      font-size: var(--text-lg);
      margin-bottom: var(--space-6);
    }
  }
</style>
