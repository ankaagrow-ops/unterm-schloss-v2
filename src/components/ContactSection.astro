---
export interface Address {
  street: string;
  city: string;
}

export interface Props {
  heading?: string;
  backgroundImage: string;
  address: Address;
  email: string;
  phone: string[];
}

const { 
  heading = "Let's Connect", 
  backgroundImage, 
  address, 
  email, 
  phone 
} = Astro.props;
---

<section class="contact-section">
  <div class="contact-grid">
    <!-- Left Column: Background Image -->
    <div class="contact-image">
      <div class="image-overlay">
        <h2 class="overlay-heading">{heading}</h2>
      </div>
    </div>
    
    <!-- Right Column: Contact Information -->
    <div class="contact-info">
      <div class="info-blocks">
        <!-- Address Block -->
        <div class="info-block animate-fadeInUp">
          <h3 class="info-heading">Adresse</h3>
          <div class="info-content">
            <span class="arrow">→</span>
            <div class="info-text">
              <p>{address.street}</p>
              <p>{address.city}</p>
            </div>
          </div>
        </div>

        <!-- Email Block -->
        <div class="info-block animate-fadeInUp animate-delay-200">
          <h3 class="info-heading">E-Mail</h3>
          <div class="info-content">
            <span class="arrow">→</span>
            <a href={`mailto:${email}`} class="info-link">{email}</a>
          </div>
        </div>

        <!-- Phone Block -->
        <div class="info-block animate-fadeInUp animate-delay-400">
          <h3 class="info-heading">Telefon</h3>
          <div class="info-content">
            <span class="arrow">→</span>
            <div class="phone-list">
              {phone.map(number => (
                <a href={`tel:${number}`} class="info-link">{number}</a>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .contact-section {
    min-height: 600px;
    display: flex;
  }

  .contact-grid {
    display: grid;
    grid-template-columns: 40% 60%;
    min-height: 600px;
    width: 100%;
  }

  .contact-image {
    position: relative;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }

  .contact-image::before {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(43, 36, 25, 0.4);
    z-index: 1;
  }

  .image-overlay {
    position: relative;
    z-index: 2;
    text-align: center;
    color: white;
  }

  .overlay-heading {
    font-family: 'Playfair Display', serif;
    color: white;
    font-size: var(--text-2xl);
    font-weight: 400;
    line-height: 1.2;
    margin: 0;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }

  .contact-info {
    background-color: var(--color-cream);
    padding: var(--space-8);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .info-blocks {
    max-width: 500px;
    width: 100%;
  }

  .info-block {
    margin-bottom: var(--space-6);
  }

  .info-block:last-child {
    margin-bottom: 0;
  }

  .info-heading {
    font-family: 'Playfair Display', serif;
    color: var(--color-brown-dark);
    font-size: var(--text-xl);
    font-weight: 400;
    margin-bottom: var(--space-3);
    line-height: 1.3;
  }

  .info-content {
    display: flex;
    align-items: flex-start;
    gap: var(--space-3);
  }

  .arrow {
    font-size: var(--text-lg);
    color: var(--color-brown-medium);
    margin-top: 0.1em;
    flex-shrink: 0;
  }

  .info-text p {
    margin: 0;
    font-family: 'DM Sans', sans-serif;
    font-size: var(--text-base);
    line-height: 1.6;
    color: var(--color-brown-medium);
  }

  .info-link {
    font-family: 'DM Sans', sans-serif;
    color: var(--color-brown-dark);
    text-decoration: none;
    font-size: var(--text-base);
    line-height: 1.6;
    transition: color 0.3s ease, text-decoration 0.3s ease;
  }

  .info-link:hover {
    color: var(--color-brown-medium);
    text-decoration: underline;
  }

  .phone-list {
    display: flex;
    flex-direction: column;
    gap: var(--space-1);
  }

  /* Animation Classes */
  .animate-fadeInUp {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease forwards;
  }

  .animate-delay-200 {
    animation-delay: 0.2s;
  }

  .animate-delay-400 {
    animation-delay: 0.4s;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .contact-grid {
      grid-template-columns: 1fr;
      min-height: auto;
    }

    .contact-image {
      min-height: 300px;
      order: 1;
    }

    .contact-info {
      order: 2;
      padding: var(--space-6);
    }

    .info-blocks {
      max-width: none;
    }

    .info-block {
      margin-bottom: var(--space-4);
    }

    .overlay-heading {
      font-size: var(--text-xl);
    }
  }

  @media (max-width: 480px) {
    .contact-info {
      padding: var(--space-4);
    }

    .info-block {
      margin-bottom: var(--space-3);
    }

    .info-heading {
      font-size: var(--text-lg);
    }

    .info-content {
      gap: var(--space-2);
    }

    .arrow {
      font-size: var(--text-base);
    }

    .info-link,
    .info-text p {
      font-size: var(--text-sm);
    }
  }
</style>